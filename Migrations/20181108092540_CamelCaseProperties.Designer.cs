// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using angular7_aspcore.Models;

namespace angular7_aspcore.Migrations
{
    [DbContext(typeof(ContactAppContext))]
    [Migration("20181108092540_CamelCaseProperties")]
    partial class CamelCaseProperties
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.4-rtm-31024")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("angular7_aspcore.Models.Contact", b =>
                {
                    b.Property<long?>("contactId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("birth");

                    b.Property<string>("email");

                    b.Property<byte>("gender");

                    b.Property<string>("message");

                    b.Property<string>("name");

                    b.Property<string>("techno");

                    b.HasKey("contactId");

                    b.ToTable("Contacts");
                });

            modelBuilder.Entity("angular7_aspcore.Models.Type", b =>
                {
                    b.Property<long?>("typeId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Discriminator")
                        .IsRequired();

                    b.Property<string>("name");

                    b.HasKey("typeId");

                    b.ToTable("Types");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Type");
                });

            modelBuilder.Entity("angular7_aspcore.Models.Vehicle", b =>
                {
                    b.Property<long?>("vehicleId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("contactId");

                    b.Property<string>("make");

                    b.Property<string>("model");

                    b.Property<string>("registration");

                    b.Property<long?>("typeId");

                    b.Property<string>("version");

                    b.HasKey("vehicleId");

                    b.HasIndex("contactId");

                    b.HasIndex("typeId");

                    b.ToTable("Vehicles");
                });

            modelBuilder.Entity("angular7_aspcore.Models.Bodystyle", b =>
                {
                    b.HasBaseType("angular7_aspcore.Models.Type");


                    b.ToTable("Bodystyle");

                    b.HasDiscriminator().HasValue("Bodystyle");
                });

            modelBuilder.Entity("angular7_aspcore.Models.Vehicle", b =>
                {
                    b.HasOne("angular7_aspcore.Models.Contact", "contact")
                        .WithMany()
                        .HasForeignKey("contactId");

                    b.HasOne("angular7_aspcore.Models.Bodystyle", "bodystyle")
                        .WithMany()
                        .HasForeignKey("typeId");
                });
#pragma warning restore 612, 618
        }
    }
}
